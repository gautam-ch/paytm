
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
       id                           Int                   @id @default(autoincrement())
       email                        String?               @unique
       name                         String?  
       number                       String                @unique
       password                     String
       Balance                      Balance[]
       onRampTransaction            onRampTransaction[]
       sentTransfers                p2pTransfer[]         @relation(name: "fromUserRelation")
       receivedTransfer             p2pTransfer[]         @relation(name: "toUserRelation")
}

model Merchant{
     id         Int       @id @default(autoincrement())
     email      String    @unique
     name       String
     auth_type  AuthType
}

model Balance{
     id         Int    @id @default(autoincrement())
     amount     Int
     userId     Int    @unique 
     locked     Int    @default(0)
     user       User   @relation(fields: [userId],references: [id])    
}

model p2pTransfer{
      id                Int           @id @default(autoincrement())
      amount            Int 
      timestamp         DateTime
      fromUserId        Int
      fromUser          User          @relation(name: "fromUserRelation",fields: [fromUserId],references: [id])
      toUserId          Int
      toUser            User          @relation(name: "toUserRelation",fields:[toUserId],references: [id])
}

model onRampTransaction {
  id            Int              @id @default(autoincrement())
  status        OnRampStatus
  token         String           @unique
  provider      String
  amount        Int
  startTime     DateTime
  userId        Int              
  user          User             @relation(fields: [userId],references: [id])
}

enum OnRampStatus{
  Success
  Failure
  Processing
}
enum AuthType{
  Google
  Github
}